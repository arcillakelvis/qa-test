package cloudemployee.qatest.countriesapitest;

import io.testproject.java.annotations.v2.Parameter;
import io.testproject.java.annotations.v2.Test;
import io.testproject.java.enums.ParameterDirection;
import io.testproject.java.enums.TakeScreenshotConditionType;
import io.testproject.java.sdk.v2.drivers.WebDriver;
import io.testproject.java.sdk.v2.enums.ExecutionResult;
import io.testproject.java.sdk.v2.exceptions.FailureException;
import io.testproject.java.sdk.v2.reporters.TestReporter;
import io.testproject.java.sdk.v2.tests.WebTest;
import io.testproject.java.sdk.v2.tests.helpers.WebTestHelper;
import io.testproject.proxy.addon.RESTfulAPIClient;
import io.testproject.proxy.addon.io.testproject.addon.restfulapiclient.actions.DeleteAction;
import io.testproject.proxy.addon.io.testproject.addon.restfulapiclient.actions.GetAction;
import io.testproject.proxy.addon.io.testproject.addon.restfulapiclient.actions.PatchAction;
import java.lang.String;

/**
 * This class was automatically generated by TestProject
 * Project: My first Project
 * Test: CloudEmployee
 * Generated by: Kelvis Arcilla (arcillakelvis@gmail.com)
 * Generated on Sat Aug 29 16:08:52 GMT 2020.
 */
@Test(
    name = "CloudEmployee",
    description = "Test Countries API",
    version = "1.0"
)
public class Cloudemployee implements WebTest {
  @Parameter(
      description = "Auto generated application URL parameter",
      defaultValue = "http://localhost:8080/docs/",
      direction = ParameterDirection.INPUT
  )
  public String ApplicationURL;

  @Parameter(
      description = "country code",
      defaultValue = "afg",
      direction = ParameterDirection.INPUT
  )
  public String code;

  @Parameter(
      description = "country api endpoint",
      defaultValue = "http://localhost:8080/countries",
      direction = ParameterDirection.INPUT
  )
  public String countryEndpoint;

  @Parameter(
      description = "login token",
      defaultValue = "Authorization=Basic YWRtaW46cEA1NXcwN2Q=",
      direction = ParameterDirection.INPUT
  )
  public String authorizationHeader;

  @Parameter(
      description = "update name and population of given country code",
      defaultValue = "{  \"name\": \"sample name\",  \"population\": 200}",
      direction = ParameterDirection.INPUT
  )
  public String requestBody;

  public ExecutionResult execute(WebTestHelper helper) throws FailureException {
    WebDriver driver = helper.getDriver();
    // set timeout for driver actions (similar to step timeout)
    driver.setTimeout(15000);
    TestReporter report = helper.getReporter();
    ExecutionResult executionresult;
    PatchAction patchAction;
    DeleteAction deleteAction;
    GetAction getAction;

    // 1. PATCH '{{countryEndpoint}}/{{code}}'?'[NONE]'
    //    Patch Country data
    patchAction = RESTfulAPIClient.patchAction(String.format("%s/%s",countryEndpoint,code),"",authorizationHeader,"202","",false,requestBody,"");
    executionresult = helper.executeProxy(patchAction);
    report.step(String.format("PATCH '%s/%s'?'[NONE]'",countryEndpoint,code), executionresult == ExecutionResult.PASSED && patchAction.status.equals(202), TakeScreenshotConditionType.Never);

    // 2. GET '{{countryEndpoint}}'?'order=asc'
    //    Get Countries in ascending order
    getAction = RESTfulAPIClient.getAction(countryEndpoint,"order=asc",authorizationHeader,"200","",false);
    executionresult = helper.executeProxy(getAction);
    report.step(String.format("GET '%s'?'order=asc'",countryEndpoint), executionresult == ExecutionResult.PASSED && getAction.response.startsWith("[{\"name\":\"sample name\",\"code\":\"afg\",\"population\":200},") && getAction.status.equals(200), TakeScreenshotConditionType.Never);

    // 3. GET '{{countryEndpoint}}'?'order=desc'
    //    Get Countries in descending order
    getAction = RESTfulAPIClient.getAction(countryEndpoint,"order=desc",authorizationHeader,"200","",false);
    executionresult = helper.executeProxy(getAction);
    report.step(String.format("GET '%s'?'order=desc'",countryEndpoint), executionresult == ExecutionResult.PASSED && getAction.response.endsWith("{\"name\":\"sample name\",\"code\":\"afg\",\"population\":200}]") && getAction.status.equals(200), TakeScreenshotConditionType.Never);

    // 4. DELETE '{{countryEndpoint}}/{{code}}'?'[NONE]'
    //    Delete Country via Code
    deleteAction = RESTfulAPIClient.deleteAction(String.format("%s/%s",countryEndpoint,code),"",authorizationHeader,"500","",false);
    executionresult = helper.executeProxy(deleteAction);
    report.step(String.format("DELETE '%s/%s'?'[NONE]'",countryEndpoint,code), executionresult == ExecutionResult.PASSED && deleteAction.response.contains("Cannot DELETE FROM Countrie") && deleteAction.status.equals(500), TakeScreenshotConditionType.Never);

    // 5. GET '{{countryEndpoint}}/reset'?'[NONE]'
    //    Reset list of countries to base data
    getAction = RESTfulAPIClient.getAction(String.format("%s/reset",countryEndpoint),"",authorizationHeader,"204","",false);
    executionresult = helper.executeProxy(getAction);
    report.step(String.format("GET '%s/reset'?'[NONE]'",countryEndpoint), executionresult == ExecutionResult.PASSED && getAction.status.equals(204), TakeScreenshotConditionType.Never);

    // 6. GET '{{countryEndpoint}}'?'order=asc'
    //    Get Countries in ascending order
    getAction = RESTfulAPIClient.getAction(countryEndpoint,"order=asc",authorizationHeader,"200","",false);
    executionresult = helper.executeProxy(getAction);
    report.step(String.format("GET '%s'?'order=asc'",countryEndpoint), executionresult == ExecutionResult.PASSED && getAction.response.startsWith("[{\"name\":\"AFGHANISTAN\",\"code\":\"afg\",\"population\":0},") && getAction.status.equals(200), TakeScreenshotConditionType.Never);

    return ExecutionResult.PASSED;
  }
}
